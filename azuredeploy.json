{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 17,
      "metadata": {
        "description": "The prefix to be used for all resources that will be provisioned."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "M365AdminUPN": {
      "type": "string",
      "metadata": {
        "description": "M365 admin username that has rights to grant Teams policies."
      }
    },
    "M365AdminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The password for the account noted in M365AdminUPN."
      }
    }
  },
  "variables": {
    "_artifactsLocation": "https://raw.githubusercontent.com/adthom/SelfService/main/"
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation')]",
      "location": "eastus",
      "properties": {
        "sku": {
          "name": "Basic"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'storage')]",
      "location": "eastus",
      "sku": {
        "name": "Standard_GRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/credentials",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/O365Admin')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "userName": "[parameters('M365AdminUPN')]",
        "password": "[parameters('M365AdminPassword')]"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/', guid(parameters('resourceNamePrefix')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/schedules', concat(toLower(parameters('resourceNamePrefix')),'-automation'), 'Weekly')]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', concat(toLower(parameters('resourceNamePrefix')),'-automation'), 'UpgradeToTeamsOnly')]"
      ],
      "properties": {
        "runbook": {
          "name": "UpgradeToTeamsOnly"
        },
        "schedule": {
          "name": "Weekly"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/Az.Accounts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "contentLink": {
          "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/az.accounts.2.2.1.nupkg"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/Az.Automation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/modules', concat(toLower(parameters('resourceNamePrefix')),'-automation'), 'Az.Accounts')]"
      ],
      "properties": {
        "contentLink": {
          "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/az.automation.1.4.0.nupkg"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/Az.Storage')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/modules', concat(toLower(parameters('resourceNamePrefix')),'-automation'), 'Az.Accounts')]"
      ],
      "properties": {
        "contentLink": {
          "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/az.storage.3.0.0.nupkg"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/MicrosoftTeams')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "contentLink": {
          "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/microsoftteams.1.1.6.nupkg"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2018-06-30",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/UpgradeToTeamsOnly')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false,
        "logActivityTrace": 0,
        "publishContentLink": {
          "uri": "[uri(variables('_artifactsLocation'), 'Scripts/UpgradeToTeamsOnly.ps1')]",
          "version": "1.0.0.0"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2018-06-30",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/WaitForBatch')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": false,
        "logProgress": false,
        "logActivityTrace": 0,
        "publishContentLink": {
          "uri": "[uri(variables('_artifactsLocation'), 'Scripts/WaitForBatch.ps1')]",
          "version": "1.0.0.0"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/Weekly')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "startTime": "2020-11-19T20:00:00-05:00",
        "expiryTime": "9999-12-31T18:59:00-05:00",
        "interval": 1,
        "frequency": "Week",
        "timeZone": "America/New_York"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/variables",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/ResourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "isEncrypted": false,
        "value": "\"[resourceGroup().name]\"",
        "description": "The name of the Azure Resource Group"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/variables",
      "apiVersion": "2015-10-31",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'-automation', '/ResourcePrefix')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat(toLower(parameters('resourceNamePrefix')),'-automation'))]"
      ],
      "properties": {
        "isEncrypted": false,
        "value": "\"[toLower(parameters('resourceNamePrefix'))]\"",
        "description": "The prefix of the created resources"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'storage', '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', concat(toLower(parameters('resourceNamePrefix')),'storage'))]"
      ],
      "properties": {
        "metadata": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'storage', '/default/teamsonlycompleted')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', concat(toLower(parameters('resourceNamePrefix')),'storage'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(toLower(parameters('resourceNamePrefix')),'storage'))]"
      ],
      "properties": {
        "metadata": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(toLower(parameters('resourceNamePrefix')),'storage', '/default/teamsonlypending')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', concat(toLower(parameters('resourceNamePrefix')),'storage'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(toLower(parameters('resourceNamePrefix')),'storage'))]"
      ],
      "properties": {
        "metadata": {}
      }
    }
  ]
}